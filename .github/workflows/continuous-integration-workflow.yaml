name: Cargo Build

on:
  push:
    branches:
      - master

jobs:
  build-windows:
    name: Windows
    env:
        LIBRARY: Skia
        RUST_BACKTRACE: full
    runs-on: ${{ matrix.variant.os }}
    strategy:
      matrix:
        variant:
          - os: windows-latest
            prefix: ''
            extension: .dll
            platform: windows
    steps:
      - name: Set CARGO_HOME
        run: |
          echo "::set-env name=CARGO_HOME::$env:GITHUB_WORKSPACE"
      - name: Check CARGO_HOME
        run: echo $env:CARGO_HOME

      - name: Support longpaths
        if: matrix.variant.os == 'windows-latest'
        run: |
          git config --system core.autocrlf true
          git config --system core.longpaths true

      - name: Set up python 2
        uses: actions/setup-python@v1
        with:
          python-version: '2.x'

      - name: Install dependencies
        run: choco install llvm

      - uses: actions/checkout@master
    
      - name: Update certificates
        if: matrix.variant.os == 'windows-latest'
        run: ./scripts/install_certificate.ps1
        shell: powershell
      
      - name: Test certificates
        if: matrix.variant.os == 'windows-latest'
        run: python ./scripts/test_certificate.py

      - name: Install Rust stable
        run: choco install rustup.install --ignore-checksums
        
      - name: Run cargo build
        run: cargo build --release
        shell: powershell
        
      - name: Deploy
        uses: garygrossgarten/github-action-scp@release
        with:
          local: target/release/${{matrix.variant.prefix}}${{env.LIBRARY}}${{matrix.variant.extension}}
          remote: /var/www/html/${{env.LIBRARY}}/${{matrix.variant.platform}}/development/x86_64/lib${{env.LIBRARY}}${{matrix.variant.extension}}
          host: ${{ secrets.FEENK_CLOUD }}
          username: ubuntu
          privateKey: ${{ secrets.SSH_KEY }}

  build-unixes:
    name: Linux, MacOSX
    env:
        LIBRARY: Skia
        RUST_BACKTRACE: full
    runs-on: ${{ matrix.variant.os }}
    strategy:
      matrix:
        variant:
          - os: ubuntu-latest
            prefix: lib
            extension: .so
            platform: linux
          - os: macos-latest
            prefix: lib
            extension: .dylib
            platform: osx
    steps:
      - name: Install dependencies (Linux)
        if: matrix.variant.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install libgl1-mesa-dev

      - name: Install dependencies (MacOS)
        if: matrix.variant.os == 'macos-latest'
        run: |
          brew update
          brew install llvm
          brew link llvm --force
          export LDFLAGS="-L/usr/local/opt/llvm/lib"
          export CPPFLAGS="-I/usr/local/opt/llvm/include"

      - uses: actions/checkout@master
  
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      
      - name: Deploy
        uses: garygrossgarten/github-action-scp@release
        with:
          local: target/release/${{matrix.variant.prefix}}${{env.LIBRARY}}${{matrix.variant.extension}}
          remote: /var/www/html/${{env.LIBRARY}}/${{matrix.variant.platform}}/development/x86_64/lib${{env.LIBRARY}}${{matrix.variant.extension}}
          host: ${{ secrets.FEENK_CLOUD }}
          username: ubuntu
          privateKey: ${{ secrets.SSH_KEY }}
